- hosts: localhost
  become: false
  gather_facts: false
  tasks:
    - import_role:
        name: ec2_find_subnets

    - import_role:
        name: ec2_class_eips
      vars:
        eip_class: master

    - import_role:
        name: ec2_launch
      vars:
        launch_class: master
        launch_ami_class: base
        launch_profile: master
        launch_subnet: "{{ ec2_subnets_public_sorted[aws_region].0 }}"
        launch_groups:
          - vault
        launch_tags:
          CustomDNSName: "{{ master_hostname }}"
        launch_count: "{{ (master_hostname in hostvars) | ternary(0, 1) }}"
        launch_wait: false
        aws_ssh_key: "{{ aws_resource_prefix }} {{ (aws_status == 'prod') | ternary('31d2b0', 'cb8c7a') }}"
        bootstrap: true

    - name: Set CNAMEs for vhosts
      route53:
        profile: "{{ aws_profile_subd }}"
        command: create
        overwrite: true
        zone: "{{ subd }}"
        record: "{{ item }}.{{ subd }}"
        type: CNAME
        ttl: 60
        value: "{{ master_hostname }}"
      loop:
        - graphs
        - vault
        - wiki
      when: aws_region == aws_primary_region
      tags:
        - dns

    - name: Set CNAMEs for regional vhosts
      route53:
        profile: "{{ aws_profile_subd }}"
        command: create
        overwrite: true
        zone: "{{ subd }}"
        record: "{{ item }}.{{ aws_region }}.{{ subd }}"
        type: CNAME
        ttl: 60
        value: "{{ master_hostname }}"
      loop:
        - ara
        - dashboard
      tags:
        - dns

    - name: Wait for instance to be available
      pause:
        seconds: 120
      when: master_hostname not in hostvars

    - meta: refresh_inventory

- hosts: Class_master:&Status_spinup
  gather_facts: false
  tasks:
    - import_role:
        name: ec2_eip
      vars:
        eip_class: master
    - wait_for_connection:

- hosts: localhost
  become: false
  gather_facts: false
  tasks:
    - name: Attach EBS home volume
      ec2_vol:
        name: master_home
        region: "{{ aws_region }}"
        profile: "{{ aws_profile }}"
        instance: "{{ hostvars[master_hostname]['instance_id'] }}"
        device_name: xvdd
        volume_type: gp2
        volume_size: 40
        encrypted: true
        delete_on_termination: false

- import_playbook: bootstrap_master.yml
