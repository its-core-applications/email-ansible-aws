---

- hosts: localhost
  become: false
  tasks:
    - import_tasks: task_find_ami.yml

    - name: Gather VPC subnet facts
      ec2_vpc_subnet_facts:
        region: "{{ aws_region }}"
        filters:
          vpc-id: "{{ aws_vpn_vpc }}"
      register: ec2_subnets
    - name: Create syslog
      ec2:
        group: [ vpn-default, rsyslog ]
        key_name: "{{ aws_ssh_key }}"
        instance_type: m5.xlarge
        region: "{{ aws_region }}"
        vpc_subnet_id: "{{ ec2_subnets.subnets.0.id }}"
        image: "{{ find_ami.image_id }}"
        instance_profile_name: standard
        instance_tags:
          Class: syslog
          Status: production
        exact_count: 1
        count_tag:
          Class: syslog
        wait: true
      # this is just to force a consistent result structure
      loop: [ dummy ]
      register: ec2

    - import_tasks: task_wait_for_launched.yml

    - name: Attach EBS log volume
      ec2_vol:
        name: logs
        region: "{{ aws_region }}"
        instance: "{{ groups.tag_Class_syslog | default({}) | map('extract', hostvars, 'ec2_id') | join }}"
        device_name: xvdd
        volume_type: gp2
        volume_size: 300
        encrypted: true
        delete_on_termination: false

    - name: Attach splunk volume
      ec2_vol:
        name: splunk
        region: "{{ aws_region }}"
        instance:  "{{ groups.tag_Class_syslog | default({}) | map('extract', hostvars, 'ec2_id') | join }}"
        device_name: xvde
        volume_type: gp2
        volume_size: 5
        encrypted: true
        delete_on_termination: false

    - name: Attach carbon volume
      ec2_vol:
        name: carbon
        region: "{{ aws_region }}"
        instance: "{{ groups.tag_Class_syslog | default({}) | map('extract', hostvars, 'ec2_id') | join }}"
        device_name: xvdf
        volume_type: gp2
        volume_size: 10
        encrypted: true
        delete_on_termination: false

- import_playbook: syslog.yml

- hosts: localhost
  become: false
  tasks:
    - name: "Set syslog.{{ subd }}"
      route53:
        command: "create"
        overwrite: true
        zone: "{{ subd }}"
        record: "syslog.{{ subd }}"
        type: "A"
        ttl: 60
        value: "{{ groups.tag_Class_syslog | default({}) | map('extract', hostvars, 'ec2_private_ip_address') | join(', ') }}"

- hosts: tag_Class_syslog
  roles:
    - { role: sensu_proxyclients, tags: sensu }

