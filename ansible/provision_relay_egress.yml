---

- hosts: localhost
  become: false
  tasks:
    - import_role:
        name: ec2_class_eips
      vars:
        eip_class: relay-egress

    - import_role:
        name: ec2_launch
      vars:
        launch_ami_class: egress
        launch_class: relay-egress
        launch_groups:
          - egress
          - redis
        launch_tags:
          redis: 'yes'

- hosts: Class_relay_egress:&Status_spinup
  serial: 1
  tasks:
    - when: region == aws_region
      delegate_to: localhost
      become: false
      block:
        - name: Fetch egress EIPs
          ec2_eip_facts:
            region: "{{ aws_region }}"
            profile: "{{ aws_profile_ec2 }}"
            filters:
              "tag:Class": relay-egress
          register: result

        - name: Make sure we have a free EIP
          assert:
            that: result.addresses | rejectattr('association_id', 'defined') | list | length > 0
            msg: No available egress EIPs

        - name: Assign elastic IP
          ec2_eip:
            region: "{{ region }}"
            profile: "{{ aws_profile_ec2 }}"
            device_id: "{{ instance_id }}"
            public_ip: "{{ (result.addresses | rejectattr('association_id', 'defined') | first).public_ip }}"
          register: result

- hosts: Class_relay_egress:&Status_spinup
  tasks:
    - delegate_to: localhost
      become: false
      block:
        - name: Wait for elastic IP
          wait_for:
            host: "{{ result.public_ip }}"
            port: 22
            search_regex: OpenSSH

        - name: Set status to production
          ec2_tag:
            region: "{{ region }}"
            profile: "{{ aws_profile_ec2 }}"
            resource: "{{ instance_id }}"
            tags:
              Status: production

- hosts: localhost
  become: false
  tasks:
    - meta: refresh_inventory

    - import_role:
        name: route53_dns_from_inventory
      vars:
        dns_host: relay-egress
        dns_group: Class_relay_egress

    - import_role:
         name: redis_master
      tags: redis

    - import_role:
        name: route53_dns_from_inventory
      vars:
        dns_host: pink
        dns_group: redis

    - import_role:
        name: sensu_proxyclients
      tags: sensu
