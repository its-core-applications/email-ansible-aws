#!/bin/bash

ttl=60
region=$(curl -fs http://169.254.169.254/latest/meta-data/placement/availability-zone) 
region=${region::-1} 
instanceid=$(curl -fs http://169.254.169.254/latest/meta-data/instance-id)

sethostname() {
    echo "Setting FQDN to $1"
    hostnamectl set-hostname $1
    systemctl try-restart rsyslog.service simta.service sensu-client.service
    aws ec2 create-tags --region=$region --resources=$instanceid --tags Key=Name,Value=${1%%.*} Key=CustomDNSName,Value=$1
}

zoneid=$(route53 ls | awk '/ID:/{ id=$NF } /Name: {{ subd }}.$/{ print id }')

if [[ -z $zoneid ]]; then
    echo "Failed to fetch zone ID, not setting hostname"
    exit 1
fi

publicname=$(curl -fs http://169.254.169.254/latest/meta-data/public-hostname)

if [[ -s /etc/dynhostname.static ]]; then
    if [[ $1 != 'clear' ]]; then
        fqdn=$(cat /etc/dynhostname.static)
        sethostname $fqdn
        route53 change_record $zoneid $fqdn CNAME $publicname $ttl
    fi
    exit 0
fi

if [[ $1 = 'clear' ]]; then
    route53 del_record $zoneid $(hostname) CNAME $publicname $ttl
    exit $?
fi

try=0
while [[ $try -le 5 ]] && [[ -z $tags ]]; do
    tags=$(aws ec2 describe-tags --region=$region --filter="Name=resource-id,Values=$instanceid")
    if [[ -z $tags ]]; then
        if [[ $(( try++ )) -gt 5 ]]; then
            echo "Failed to fetch tags, not setting hostname"
            exit 1
        fi
        sleep 1
    fi
done

# Fetch an existing DNS name, if set
fqdn=$(echo $tags | jq -r '.Tags[] | select(.Key == "CustomDNSName") | .Value')

if [[ $fqdn ]]; then
    sethostname $fqdn
    route53 change_record $zoneid $fqdn CNAME $publicname $ttl
    exit 0
fi

# Otherwise generate one automatically
class=$(echo $tags | jq -r '.Tags[] | select(.Key == "Class") | .Value')
base={{ subd }}
prefixes=/usr/share/hostname-prefixes
suffixes=/usr/share/hostname-suffixes
if [[ $class ]]; then
    base=${class}.$base
    [[ -s ${prefixes}-$class ]] && prefixes=${prefixes}-$class
    [[ -s ${suffixes}-$class ]] && suffixes=${suffixes}-$class
fi

try=0
while [[ -z $name ]]; do
    name=$(shuf -n 1 $prefixes)-$(shuf -n 1 $suffixes)
    fqdn=${name}.$base
    # Try to add it to DNS. This will fail if it already exists, which avoids
    # any possibility of a race.
    route53 add_record $zoneid $fqdn CNAME $publicname $ttl
    if [[ $? -eq 1 ]]; then
        if [[ $(( try++ )) -gt 10 ]]; then
            echo "dynhostname is giving up..."
            exit 1
        fi
        unset name
        sleep 1
    fi
done

sethostname $fqdn
