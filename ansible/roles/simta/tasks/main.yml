- tags:
    - simta
  block:
    - name: Install simta
      yum:
        name: simta-{{ simta_version }}
        state: present
      notify: Restart simta

    - name: Install auxiliary packages
      yum:
        name:
          - denser-utils
          - libucl-utils
          - simta-admin {{ (simta_version is version('1.9', '<')) | ternary('<', '>=') }} 3.0
          - simta-mscan
          - simvacation
        state: latest

    - name: Create directories
      file:
        dest: "{{ item }}"
        state: directory
        owner: root
        group: root
        mode: "0755"
      loop:
        - /etc/mail
        - /etc/mail/filters
        - /etc/systemd/system/simta.service.d

    - name: Enable core files
      copy:
        dest: /etc/systemd/system/simta.service.d/core.conf
        src: systemd-core.conf
        owner: root
        group: root
        mode: "0644"

    - name: Install standard filters
      copy:
        dest: /etc/mail/filters/{{ item }}
        src: filters/{{ item }}
        owner: root
        group: root
        mode: "0755"
      loop:
        - 15_trust
        - 21_domain
        - 21_to
        - 21_ubl
        - 30_nsrecord
        - 40_string
      when:
        - simta_localmail == false
        - simta_filters == true

    - name: Install /etc/mail/aliases
      copy:
        dest: /etc/mail/aliases
        src: "{{ lookup('first_found', 'aliases-' ~ simta_config, 'aliases') }}"
        owner: root
        group: root
        mode: "0644"
      notify: Rebuild aliases

    - name: Configure tcpwrappers
      copy:
        dest: /etc/{{ item }}
        src: "{{ lookup('first_found', item ~ '-' ~ simta_config, item) }}"
        owner: root
        group: root
        mode: "0664"
      loop:
        - hosts.allow
        - hosts.deny
      when: simta_tcpwrappers

    - name: Install the public suffix list
      get_url:
        dest: /etc/mail/public_suffix_list.dat
        url: https://raw.githubusercontent.com/publicsuffix/list/master/public_suffix_list.dat
        owner: root
        group: root
        mode: "0644"
        force: true
      when: not simta_localmail
      notify: Restart simta

    - name: Configure OpenLDAP defaults
      copy:
        dest: /etc/openldap/ldap.conf
        src: ldap.conf
        owner: root
        group: root
        mode: "0644"
      notify: Restart simta
      when: simta_ldap

    - name: Install alias files for alias domains
      copy:
        dest: /etc/mail/aliases-{{ item }}
        src: aliases-{{ item }}
        owner: root
        group: root
        mode: "0644"
      notify: Restart simta
      loop: "{{ simta_alias_domains | default([]) }}"

    - name: Configure simvacation
      template:
        dest: /etc/mail/simvacation.conf
        src: simvacation.conf.j2
        owner: root
        group: root
        mode: "0644"
      when: simta_ldap

    - import_role:
        name: saslauthd
      when: simta_authn

    - name: Configure simta
      template:
        dest: /etc/simta.conf
        src: "{{ simta_localmail | ternary('simta.conf-localmail.j2', 'simta.conf.j2') }}"
        owner: root
        group: root
        mode: "0644"
      notify: Restart simta

    - name: Create config directories
      file:
        dest: "{{ item }}"
        state: directory
        owner: root
        group: root
        mode: "0755"
      loop:
        - /etc/simta.conf.d
        - /etc/simta.conf.d/domain

    - when: simta_ldap
      block:
        - name: Configure LDAP domains
          template:
            dest: /etc/simta.conf.d/domain/{{ [item.slug, item.tld | default(tld)] | select('defined') | join('.') }}.conf
            src: ldap_domain.conf.j2
            owner: root
            group: root
            mode: "0644"
          loop: "{{ simta_ldap_domains | default([]) }}"
          loop_control:
            label: "{{ item.slug | default(item.tld | default(tld)) }}"
          notify: Restart simta

        - name: Configure mapped LDAP domains
          template:
            dest: /etc/simta.conf.d/domain/{{ item.domain }}.conf
            src: ldap_domain_mapped.conf.j2
            owner: root
            group: root
            mode: "0644"
          loop: "{{ simta_ldap_domains_mapped | default([]) }}"
          loop_control:
            label: "{{ item.domain }}"
          notify: Restart simta

    - name: Configure autoreply domains
      template:
        dest: /etc/simta.conf.d/domain/{{ item }}.conf
        src: autoreply_domain.conf.j2
        owner: root
        group: root
        mode: "0644"
      loop: "{{ simta_autoreply_domains | default([]) }}"
      notify: Restart simta

    - name: Configure alias domains
      template:
        dest: /etc/simta.conf.d/domain/{{ item }}.conf
        src: alias_domain.conf.j2
        owner: root
        group: root
        mode: "0644"
      loop: "{{ simta_alias_domains | default([]) }}"
      notify: Restart simta

    - name: Configure devnull domains
      template:
        dest: /etc/simta.conf.d/domain/{{ item }}.conf
        src: devnull_domain.conf.j2
        owner: root
        group: root
        mode: "0644"
      loop: "{{ simta_devnull_domains | default([]) }}"
      notify: Restart simta

    - name: Configure delivery domains
      template:
        dest: /etc/simta.conf.d/domain/{{ item }}.conf
        src: delivery_domain.conf.js
        owner: root
        group: root
        mode: "0644"
      loop: "{{ simta_delivery_domains | default([]) }}"

    - import_role:
        name: certificate
      vars:
        certificate: "{{ simta_config }}.{{ tld }}"
      when: simta_tls

    - import_role:
        name: certificate
      vars:
        certificate: "{{ simta_dkim_selector }}._domainkey.{{ tld }}"
        certificate_type: dkim
      when: simta_dkim

    - import_role:
        name: certificate
      vars:
        certificate: "{{ simta_arc_selector }}._domainkey.{{ tld }}"
        certificate_type: dkim
      when: simta_arc

    - name: Enable simta
      systemd:
        name: simta
        daemon_reload: true
        enabled: true

    - name: Start simta
      systemd:
        name: simta
        state: started

    - name: Install custom monitoring scripts
      template:
        dest: /usr/local/bin/{{ item }}
        src: "{{ item }}.j2"
        owner: collaborate
        group: collaborate
        mode: "0755"
      loop:
        - check-dnsbl
        - check-dnsl
