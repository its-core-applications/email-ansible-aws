- tags:
    - base
  block:
    - include_role:
        name: python_venv
      vars:
        ansible_python_interpreter: /usr/bin/python3
        venv_name: system
        venv_py3: true
        venv_packages:
          - boto3
          - cryptography
          - influxdb
          - pyyaml
          - requests
          - git+https://github.com/its-core-applications/s3_datastore
        venv_wrappers:
          - name: datastore-fetch
          - name: datastore-upload
      tags:
        - python

    - gather_facts:

    - name: Disable SELinux
      selinux:
        state: disabled
      vars:
        ansible_python_interpreter: /usr/bin/python

    - import_role:
        name: base_packages

    - import_role:
        name: base_userenv

    - import_role:
        name: nonpeople
      when: not bootstrap

    - import_role:
        name: rsyslog

    - name: Configure sshd
      copy:
        dest: /etc/ssh/sshd_config
        src: sshd_config
        owner: root
        group: root
        mode: "0644"
      notify: Restart sshd

    - name: Install SSH client CA
      copy:
        dest: /etc/ssh/ssh_client_ca.pub
        src: ssh_client_ca.pub
        owner: root
        group: root
        mode: "0444"

    - name: Trust SSH server CA
      copy:
        dest: /etc/ssh/ssh_known_hosts
        src: ssh_known_hosts
        owner: root
        group: root
        mode: "0444"

    - import_role:
        name: sshguard
      when: not bootstrap

    - name: Configure sudoers
      template:
        dest: /etc/sudoers
        src: sudoers.j2
        owner: root
        group: root
        mode: 0440
        validate: visudo -cf %s

    - name: Configure cloud-init
      template:
        dest: /etc/cloud/cloud.cfg
        src: cloud.cfg.j2
        owner: root
        group: root
        mode: "0644"

    # Disable predictable network interface names
    - name: Configure grub
      copy:
        dest: /etc/default/grub
        src: grub
        owner: root
        group: root
        mode: "0640"
      register: result

    - name: Rebuild grub.cfg
      command: grub2-mkconfig -o /boot/grub2/grub.cfg
      when: result is changed

    - name: Set correct timezone
      timezone:
        name: America/Detroit

    - name: Customize environment
      copy:
        dest: /etc/profile.d/99_custom.sh
        src: profile.sh
        owner: root
        group: root
        mode: "0644"

    - name: Remove RHEL file cruft
      file:
        dest: "{{ item }}"
        state: absent
      loop:
        - /etc/cron.daily/rhsmd
        - /etc/motd

    - name: Configure tmux
      copy:
        dest: /etc/tmux.conf
        src: tmux.conf
        owner: root
        group: root
        mode: "0644"

    - name: Set sysctl parameters
      sysctl:
        name: "{{ item.name }}"
        value: "{{ item.value }}"
        reload: true
        ignoreerrors: true
      loop:
        - name: kernel.core_pattern
          value: /var/tmp/%e.core.%p
        - name: kernel.pid_max
          value: 4194304
        - name: fs.suid_dumpable
          value: 2
        - name: vm.overcommit_memory
          value: 1

    - name: Raise corefile limits
      copy:
        dest: /etc/security/limits.d/core.conf
        src: core.conf
        owner: root
        group: root
        mode: "0644"

    - name: Configure cron scheduled jobs
      copy:
        dest: /etc/cron.d/dailyjobs
        src: dailyjobs.cron
        owner: root
        group: root
        mode: "0644"

    - name: Configure cron search path
      cron:
        name: PATH
        value: /sbin:/bin:/usr/local/sbin:/usr/local/bin
        env: true
        state: present

    - name: Configure OpenSSL certificate generation
      copy:
        dest: /etc/pki/tls/{{ item }}
        src: "{{ item }}"
        owner: root
        group: root
        mode: "0644"
      loop:
        - openssl.cnf
        - openssl-san.cnf

    - import_role:
        name: dynhostname

    - import_role:
        name: ec2_instance_profile
      vars:
        ec2_profile: datastore
        ec2_profile_role: arn:aws:iam::{{ aws_layout[aws_status][aws_profile_s3].account }}:role/{{ aws_resource_prefix }}_S3_ds
        ec2_profile_user: root
