#!/bin/bash
# Script to update clamav client signatures
# written by peckhamj
# return codes:
# 0 = successful update
# 1 = no update available
# 2 = error

EX_OK=0
EX_NOUPDATE=1
EX_ERROR=2

name=$(basename $0)

timestamp=$(date '+%s')

clamdir=/var/lib/clamav
current=${clamdir}/current

## Get Sigs Variables
update_server=charliesangels.mr.itd.umich.edu
sshkey=~/.ssh/id_rsa

statusfile=${clamdir}/reload-status
rfolder=/var/clamav/signatures/latest
loghow="logger -t $name -p user.err"
logas='ERROR'
noticehow="logger -t $name -p user.notice"
noticeas='note'

confdir=/usr/local/collaboration/dispatch

. /usr/libexec/comint/setup

if [[ $DEBUG -eq 1 ]]; then
    loghow="tee"
    noticehow="tee"
    logas=$name
    noticeas=$name
else
    sleep $(( $RANDOM % 60 ))
fi

reload_clamd() {
    tries=60
    echo RELOADING >| $statusfile
    chmod 666 $statusfile
    clamdscan --reload
    while [[ $(cat $statusfile) = 'RELOADING' && $tries -gt 0 ]]; do
        sleep 1
        (( tries-- ))
    done
    endstate=$(cat $statusfile)
    echo "NOT CURRENTLY RELOADING" >| $statusfile
    if [[ $endstate = 'FAIL' || $tries -eq 0 ]]; then
        return 1
    else
        return 0
    fi
}

newinfo() {
    md5=$(mktemp --tmpdir main.info.XXXXXXXXXX)
    rsync -a -e "ssh -i $sshkey -o StrictHostKeyChecking=no" ${update_server}:${rfolder}/main.info $md5 2>&1 | eval $loghow
    if [[ ! -s $md5 ]]; then
        echo "$logas::newinfo failed to download main.info" | eval $loghow
        exit $EX_ERROR
    fi
    cd ${current}
    if md5sum --status -c $md5 >/dev/null 2>&1; then
        rm -f $md5
        return 2
    fi
    rm -f $md5
}

getsigs() {
    # $1 = Folder to download to
    rsync -a --delete -e "ssh -i $sshkey -o StrictHostKeyChecking=no" ${update_server}:${rfolder}/ $1 2>&1 | eval $loghow
    if [ $? -ne 0 ];then
        echo "$logas::getsigs: failed rsync -a --delete -e \"ssh -i $sshkey -o StrictHostKeyChecking=no\" ${update_server}:${rfolder}/ $1" | eval $loghow
        return 1
    fi
}

remove_oldsigs(){
    # $1 = basename newsigs
    find $clamdir -ignore_readdir_race -maxdepth 1 -type d \! -name $1 -name "s[0-9]*" -printf "%T@ %p\n" | \
        sort -r | awk '{print $2}' | tail -n +10 | xargs rm -rf
}

checksigs(){
    cd $1
    md5sum --status -c local.info || return 1
    md5sum --status -c external.info || return 1
    sigtool --quiet -i main.* || return 1
    sigtool --quiet -i daily.* || return 1
}

linksigs(){
    ln -nsf $1 $current
    echo "$noticeas: $1 set to current" | eval $noticehow
}

namesigs(){
    daily=$(ls $1 | grep daily)
    echo s$(sigtool -i $1/$daily | grep Version | awk '{print $2}')-x$(grep Version $1/external.info | awk '{ print $3 }')-l$(grep Version $1/local.info | awk '{ print $3 }')-t$(grep "#" $1/main.info | awk '{print $2}')
}

tmpsigs=${clamdir}/s$timestamp
mkdir $tmpsigs
if [[ -h $current ]]; then
    if newinfo; then
        cp -p ${current}/* $tmpsigs
    else
        echo "$noticeas: nothing to update" | eval $noticehow
        rm -rf $tmpsigs
        cleanup
        exit $EX_NOUPDATE
    fi
fi

getsigs $tmpsigs || exit $EX_ERROR

newsigs=${clamdir}/$(namesigs $tmpsigs)
if [[ -d $newsigs ]]; then
    mv $newsigs $(dirname $newsigs)/$(basename $newsigs).moved.${timestamp}
fi
mv $tmpsigs $newsigs

if ! checksigs $newsigs; then
    echo "$logas: signature in $newsigs fail checksums" | eval $loghow
    exit $EX_ERROR
fi

working=$(readlink -f $current)

linksigs $newsigs

if ! systemctl status clamav-daemon &>/dev/null ; then
    [[ $DEBUG -eq 1 ]] && echo "$name: clamd is not running"
    exit $EX_OK
fi

if ! reload_clamd ; then
    echo "$logas: clamd failed to reload the new databases" | eval $loghow
    linksigs $working
    if ! reload_clamd; then
        echo "$logas: clamd using previous databases" | eval $loghow
    else
        echo "$logas: clamd failed to reload the previous databases" | eval $loghow
    fi
    exit $EX_ERROR
fi

remove_oldsigs $(basename $newsigs)

cleanup

exit $EX_OK
