- tags:
    - bastion
  block:
    - name: Install extra packages
      yum:
        name:
          - gitolite3
          - opendkim
        state: latest

    - name: Install pipenv
      pip:
        name: pipenv
        executable: pip3
        state: latest

    - name: Create filesystem for /home
      filesystem:
        dev: /dev/xvdd
        fstype: xfs
        force: false
      register: result

    - name: Make new /home usable
      when: bootstrap and result is changed
      block:
        - name: Temporarily mount /home
          mount:
            name: /var/tmp/home
            src: /dev/xvdd
            fstype: xfs
            state: mounted

        - name: Copy the skeleton over
          shell: rsync -av /home/ /var/tmp/home/

        - name: Undo temporary mount
          mount:
            name: /var/tmp/home
            state: unmounted

        - name: Erase temporary mount
          mount:
            name: /var/tmp/home
            state: absent

    - name: Fetch authorized_keys for {{ ansible_user }}
      slurp:
        src: "~{{ ansible_user }}/.ssh/authorized_keys"
      register: slurped_keys

    - name: Mount /home
      mount:
        name: /home
        src: /dev/xvdd
        fstype: xfs
        state: mounted

    - name: Update authorized_keys for {{ ansible_user }}
      copy:
        dest: "~{{ ansible_user }}/.ssh/authorized_keys"
        content: "{{ slurped_keys.content | b64decode }}\n"
        mode: "0600"

    - name: Enable automatic snapshots of the home volume
      flowerysong.melange.aws_data_lifecycle_manager:
        region: "{{ aws_region }}"
        profile: "{{ aws_profile }}"
        role: "arn:aws:iam::{{ aws_layout[aws_status][aws_profile].account }}:role/{{ aws_resource_prefix }}_AWS_DLM"
        description: Snapshot home on bastion
        target_tags:
          Name: bastion_home
        copy_tags: true
        retain: 60
      become: false
      delegate_to: localhost

    - name: Create ~/.aws
      file:
        dest: "~{{ ansible_user }}/.aws"
        state: directory
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
        mode: "0770"

    - name: Configure AWS profiles
      template:
        src: aws_config.j2
        dest: "~{{ ansible_user }}/.aws/config"
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
        mode: "0770"
