#!/bin/bash

workdir=/home/email/umich-rbls.git

action=$2
file=$1
name="$file-$action"

shift 2

if [[ $SUDO_USER && $SUDO_USER != 'root' && $SUDO_USER != 'ec2-user' ]]; then
    export GIT_AUTHOR_EMAIL="${SUDO_USER}@umich.edu"
    export GIT_AUTHOR_NAME=$(grep "^${SUDO_USER}:" /etc/passwd | cut -d: -f5)
    export GIT_COMMITTER_NAME="$GIT_AUTHOR_NAME"
    export GIT_COMMITTER_EMAIL="$GIT_AUTHOR_EMAIL"
else
    echo "$name must be run from an individual account"
    exit 1
fi

echo "Running $action against $file"

cd $workdir

if [[ ! -s $file ]]; then
    echo "${workdir}/$file is empty or nonexistent, exiting"
    exit 1
fi


if [[ -n $(git status --porcelain $file) ]]; then
    echo "$file failed 'git status', exiting"
    git status $file
    exit 1
fi

for entry in $@ ; do
    if [[ $action = "add" ]]; then
        if grep -q -w $entry $file ; then
            echo ""
            echo -n "Oh dear, it looks like $entry is already in ${file}. "
            echo "I'm skipping this one."
            continue
        else
            sed -i -e "5i$entry" $file
        fi
    elif [[ $action = "remove" ]]; then
        if grep -q -w $entry $file ; then
            sed -ri -e "/^${entry}\b/d" $file
        else
            echo ""
            echo -n "Oh my, it looks like $entry is not in ${file}. "
            echo "I'm skipping this one."
            continue
        fi
    else
        echo "Unkown action $action, exiting"
        exit 1
    fi
done

if [[ -n $(git status --porcelain $file) ]]; then
    tmpfile=$(mktemp)
    echo "Automated change: $file: $action $@" > $tmpfile
    echo >> $tmpfile
    git diff $file | sed -e 's/^/# /' >> $tmpfile
    git commit -F $tmpfile -eo --untracked-files=no $file
    rm -f $tmpfile
    if [[ -n $(git status --porcelain $file) ]]; then
        echo
        echo echo "Aborted commit, reverting file changes."
        git checkout -- $file
    else
        git push
    fi
else
    echo
    echo "No changes made, skipping commit step."
fi
