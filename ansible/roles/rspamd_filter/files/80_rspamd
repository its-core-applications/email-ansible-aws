#!/bin/dash

if check_dfile; then
    # We have to throw away the first line, squash \\ down to \, and
    # remove control characters to get valid JSON from rspamc.
    spamout=$(rspamc --json --ip="$SIMTA_REMOTE_IP" --from="<$SIMTA_SMTP_MAIL_FROM>" --helo="$SIMTA_SMTP_HELO" --hostname="$SIMTA_REMOTE_HOSTNAME" $SIMTA_DFILE | sed '1d; s/\\\\/\\/g; s/[\x01-\x1F\x7F]//g' 2>/dev/null)

    # Use jq to format the JSON into the bits we want
    spamres=$(echo $spamout | jq -r '@text "\(.action) score=\(.score)"')
    if [ $? -ne 0 ]; then
        log "80_rspamd: bad return: $(echo $spamout | tr -d '\n')"
    fi
    spamsymbols=$(echo $spamout | jq -j '.symbols[] | del(.description) | flatten | @text')
    spamaction=${spamres% score=*}

    log "80_rspamd: $spamres symbols={$spamsymbols}"
    case "$spamaction" in
    reject)
        filter_exit $MESSAGE_REJECT
        ;;
    greylist)
        # PENALTYBOX_PASS is from 70_pb
        if [ $PENALTYBOX_PASS -eq 1 ] ; then
            logmsg=$($penaltybox_bin $penaltybox_args "rspamd")
            pbret=$?
            if [ x"$logmsg" != x ]; then
                log "80_rspamd: $logmsg"
            fi
            if [ $pbret -eq $MESSAGE_TEMPFAIL ]; then
                filter_exit $MESSAGE_TEMPFAIL
            fi
            PENALTYBOX_PASS=0
        fi
        ;;
    esac
fi
