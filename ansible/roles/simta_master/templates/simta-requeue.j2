#!/bin/bash

case $1 in

    egress)
        class='egress'
    ;;
    
    relay-egress)
        class='relay-egress'
    ;;

    jail)
        class='jail'
    ;;

    *)
        echo 'Invalid machine class provided.'
        exit 1

esac

name=simta-requeue-$class
workdir=/home/{{ ansible_user }}/simqtmp
lockfile=$workdir/${name}
startts=$(date +%s)
retval=0

tmpdir=$(mktemp -d --tmpdir ${name}.XXXXXXXX)
tmpfile=${tmpdir}/output

{# bash array syntax conflicts with Jinja2 comments #}{% raw %}

cleanup() {
    duration=$(( $(date +%s) - startts ))
    msg=$(cat $tmpfile)
    jq -n -r \
        --arg source $(hostname) \
        --arg status $retval \
        --arg duration $duration \
        --arg msg "$msg" \
        --arg name $name
        '{ name: $name, source: $source, ttl: 900, duration: $duration | tonumber, status: $status | tonumber, output: $msg }' | ncat localhost 3030
    rm -rf $tmpdir
    rm -f $lockfile
    exit $retval
}

if [[ -f $lockfile ]]; then
    echo "Lockfile $lockfile already exists, exiting" >> $tmpfile
    retval=1
    cleanup
fi
touch $lockfile
trap 'rm -f $lockfile ; exit 1' 1 2 3 15

readarray -t hosts < <(ansible --list-hosts "Class_${class/-/_}:&Status_production" 2>/dev/null | sed -e '0,/hosts (/d; s/ //g')

for qhost in ${hosts[@]}; do
    [[ -s ${workdir}/{$qhost}.tar ]] && echo "Stale ${workdir}/{$qhost}.tar" >> $tmpfile
done

if [[ -s $tmpfile ]]; then
    echo "Exiting due to errors" >> $tmpfile
    retval=1
    cleanup
fi

qhosts=(${hosts[@]})
for queue in ${workdir}/inbound/${class}/* ; do
    [[ -d $queue ]] || continue
    [[ -e ${queue}.lock ]] && continue
    find $queue -type f -name D\* >| ${tmpdir}/msglist
    if [[ -s ${tmpdir}/msglist ]]; then
        if [[ ${#qhosts[@]} -eq 0 ]]; then
            echo "$class has messages to requeue but there are no target servers" >> $tmpfile
            retval=1
            cleanup
        fi
        echo "Requeuing $(wc -l ${tmpdir}/msglist | awk '{print $1}') messages from $(basename $queue)" >> $tmpfile
        split -a1 -d -n l/${#qhosts[@]} ${tmpdir}/msglist ${tmpdir}/msglist-
        for i in "${!qhosts[@]}"; do
            mkdir -p ${workdir}/outbound/${qhosts[$i]}
            sed -e 'p; s/D/E/;' "${tmpdir}/msglist-$i" | xargs -r -I msg mv msg "${workdir}/outbound/${qhosts[$i]}/"
        done
    else
        echo "Nothing to requeue in $(basename $queue)" >> $tmpfile
    fi
    rmdir $queue
done
echo "Finished checking $class" >> $tmpfile

find ${workdir}/outbound -empty -delete

for qhost in ${hosts[@]}; do
    if [[ -d ${workdir}/outbound/${qhost} ]]; then
        tar -C ${workdir}/outbound/${qhost} --owner=simta --group=mail --mode=0644 -cf ${workdir}/outbound/${qhost}.tar . &>>$tmpfile
        if [[ $? -eq 0 ]]; then
            rm -rf ${workdir}/outbound/${qhost}
            ansible $qhost -m unarchive -a "src=${workdir}/outbound/${qhost}.tar dest=/var/spool/simta/slow extra_opts=--strip-components=1" &>>$tmpfile
            if [[ $? -eq 0 ]]; then
                rm -f ${workdir}/outbound/${qhost}.tar
            else
                retval=1
            fi
        else
            retval=1
        fi
    fi
done

cleanup
{% endraw %}
