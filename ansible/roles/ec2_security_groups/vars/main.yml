ec2_sg_trusted_ips: "{{ aws_layout[aws_status] | map('extract', ec2_subnets_public) | flatten | union(aws_layout[aws_status] | map('extract', ec2_subnets_vpn) | flatten) | map(attribute='cidr_block') | union(trusted_external_ips) | cidr_merge }}"
ec2sg_profile: "{{ aws_profile }}"
ec2sg_region: "{{ aws_layout[aws_status][ec2sg_profile].region }}"
ec2_sg:
  public-default:
    vpc_id: "{{ ec2_subnets_public[ec2sg_profile].0.vpc_id }}"
    description: default VPC security group
    rules:
      # ping
      - proto: icmp
        ports: -1
        cidr_ip: 0.0.0.0/0
      # SSH and HTTP
      - proto: tcp
        ports:
          - 22
          - 80
          - 443
        cidr_ip: 0.0.0.0/0
      # mosh
      - proto: udp
        ports: 60000-61000
        cidr_ip: 0.0.0.0/0
      # Prometheus
      - proto: tcp
        ports:
          - 9090
          - 9100
        cidr_ip: "{{ ec2_sg_trusted_ips }}"
    rules_egress:
      - proto: all
        cidr_ip: 0.0.0.0/0
  vpn-default:
    vpc_id: "{{ ec2_subnets_vpn[ec2sg_profile].0.vpc_id }}"
    description: default VPC security group
    rules:
      # ping
      - proto: icmp
        ports: -1
        cidr_ip: 0.0.0.0/0
      # SSH
      - proto: tcp
        ports: 22
        cidr_ip: 0.0.0.0/0
      # mosh
      - proto: udp
        ports: 60000-61000
        cidr_ip: 0.0.0.0/0
      # Prometheus
      - proto: tcp
        ports:
          - 9090
          - 9100
        cidr_ip: "{{ ec2_sg_trusted_ips }}"
    rules_egress:
      - proto: all
        cidr_ip: 0.0.0.0/0

  mx-elb:
    vpc_id: "{{ ec2_subnets_public[ec2sg_profile].0.vpc_id }}"
    description: mx ELB
    rules:
      - proto: tcp
        ports: 25
        cidr_ip: 0.0.0.0/0
      - proto: icmp
        ports: -1
        cidr_ip: 0.0.0.0/0
    rules_egress:
      - proto: all
        cidr_ip: 0.0.0.0/0

  mx:
    vpc_id: "{{ ec2_subnets_public[ec2sg_profile].0.vpc_id }}"
    description: mx hosts
    rules:
      - proto: tcp
        ports: 25
        group_id: sg-12854969

  egress:
    vpc_id: "{{ ec2_subnets_public[ec2sg_profile].0.vpc_id }}"
    description: egress hosts
    rules:
      - proto: tcp
        ports: 25
        cidr_ip: "{{ ec2_sg_trusted_ips }}"

  vdc-relay:
    vpc_id: "{{ ec2_subnets_public[ec2sg_profile].0.vpc_id }}"
    description: vdc relay hosts
    rules:
      - proto: tcp
        ports:
          - 25
          - 587
        cidr_ip: 10.0.0.0/8

  smtp:
    vpc_id: "{{ ec2_subnets_public[ec2sg_profile].0.vpc_id }}"
    description: auth SMTP
    rules:
      - proto: tcp
        ports:
          - 25
          - 465
          - 587
        cidr_ip: 0.0.0.0/0

  vpn-smtp:
    vpc_id: "{{ ec2_subnets_vpn[ec2sg_profile].0.vpc_id }}"
    description: SMTP
    rules:
      - proto: tcp
        ports:
          - 25
          - 465
          - 587
        cidr_ip: 0.0.0.0/0

  rsyslog:
    vpc_id: "{{ ec2_subnets_vpn[ec2sg_profile].0.vpc_id }}"
    description: rsyslog hosts
    rules:
      - proto: tcp
        ports:
          - 2514 # Remote syslog using RELP
          - 8086 # InfluxDB
        cidr_ip: "{{ ec2_sg_trusted_ips }}"

  rbldnsd:
    vpc_id: "{{ ec2_subnets_public[ec2sg_profile].0.vpc_id }}"
    description: rbldnsd hosts
    rules:
      - proto: udp
        ports: 53
        cidr_ip: "{{ ec2_sg_trusted_ips }}"
      - proto: tcp
        ports: 873
        cidr_ip: "{{ ec2_sg_trusted_ips }}"

  redis:
    vpc_id: "{{ ec2_subnets_public[ec2sg_profile].0.vpc_id }}"
    description: redis hosts
    rules:
      - proto: tcp
        ports:
          - 6379  # Redis
          - 16379 # Redis cluster
        cidr_ip: "{{ ec2_sg_trusted_ips }}"

  vault:
    vpc_id: "{{ ec2_subnets_public[ec2sg_profile].0.vpc_id }}"
    description: vault hosts
    rules:
      - proto: tcp
        ports: 8200
        cidr_ip: 0.0.0.0/0

  sensu:
    vpc_id: "{{ ec2_subnets_vpn[ec2sg_profile].0.vpc_id }}"
    description: sensu hosts
    rules:
      - proto: tcp
        ports:
          - 3000 # sensu dashboard
          - 8081 # sensu backend transport
        cidr_ip: "{{ ec2_sg_trusted_ips }}"
      - proto: tcp
        ports:
          - 4567 # sensu API
        cidr_ip: 0.0.0.0/0

  efs:
    vpc_id: "{{ ec2_subnets_public[ec2sg_profile].0.vpc_id }}"
    description: allow NFS
    rules:
      - proto: tcp
        ports: 2049
        cidr_ip: "{{ aws_layout[aws_status] | map('extract', ec2_subnets_public) | flatten | map(attribute='cidr_block') | cidr_merge }}"
