- tags:
    - collab
    - collab_admin_kit
  block:
    - import_role:
        name: nonpeople

    - import_role:
        name: python_venv
      vars:
        venv_name: collab-admin-kit
        venv_py3: true
        venv_build_deps:
          - python3-devel
          - bison
          - krb5-devel
        venv_packages:
          - git+https://gitlab.umich.edu/ITS/inf/collaboration-services/collab-admin-kit
        venv_wrappers:
          - name: collab-create-shared
            wrapper_environment:
              - name: KRB5_CONFIG
                value: /usr/local/venv/collab-admin-kit/krb5.conf
          - name: collab-reset-shared
            wrapper_environment:
              - name: KRB5_CONFIG
                value: /usr/local/venv/collab-admin-kit/krb5.conf
          - name: discussions-create-group
          - name: google-archive-data
          - name: google-build-fitbitstudy
          - name: google-create-resource
          - name: google-sift-drive
          - name: google-sift-labels
          - name: google-transfer-drive
          - name: google-transfer-mail
        venv_sudo_user: collaborate

    - name: Configure Collab Admin Kit
      template:
        dest: /etc/collab-admin-kit.yml
        src: collab-admin-kit.yml.j2
        owner: collaborate
        group: root
        mode: "0640"

    - name: Create Box and GAM config directories
      file:
        path: "/home/collaborate/{{ item }}"
        owner: collaborate
        group: collaborate
        mode: 0755
        state: directory
      loop:
        - 'box-config'
        - 'box-config/{{ boxd }}'
        - 'gam-config'
        - 'gam-config/{{ googled }}'

    - name: Copy over Box API credentials
      copy:
        dest: "/home/collaborate/box-config/{{ boxd }}/auth.json.b64"
        content: "{{ lookup('hashi_vault', 'secret=secret/box/api:value') }}"
        owner: collaborate
        group: root
        mode: "0640"
      register: result

    - name: Decode Box API credentials
      shell: "base64 -d /home/collaborate/box-config/{{ boxd }}/auth.json.b64 > /home/collaborate/box-config/{{ boxd }}/auth.json"

    - name: Set permissions on Box API credentials
      file:
        dest: "/home/collaborate/box-config/{{ boxd }}/auth.json"
        owner: collaborate
        group: root
        mode: "0640"

    - name: Copy over the cak keytab
      copy:
        dest: /usr/local/venv/collab-admin-kit/cak.keytab.b64
        content: "{{ lookup('hashi_vault', 'secret=secret/krb/cak/' ~ kerbrealm ~ ':value') }}"
        owner: collaborate
        group: root
        mode: "0640"
      register: result

    - name: Decode the keytab
      shell: base64 -d /usr/local/venv/collab-admin-kit/cak.keytab.b64 > /usr/local/venv/collab-admin-kit/cak.keytab

    - name: Set permissions on the keytab
      file:
        dest: /usr/local/venv/collab-admin-kit/cak.keytab
        owner: collaborate 
        group: root
        mode: "0640"

    - name: Copy over CAK-specific kerberos config
      template:
        src: krb5.conf.j2
        dest: /usr/local/venv/collab-admin-kit/krb5.conf
        owner: root
        group: root
        mode: "0644"

    - name: Cron daily shared account password cleanup in Google Drive
      copy:
        src: 99_purge_shared_account_passwords.sh
        dest: /etc/cron.daily/99_purge_shared_account_passwords.sh
        owner: root
        group: root
        mode: "0755"

    - name: Schedule daily runs of google-archive-data
      cron:
        name: Google Daily Archive
        user: collaborate
        minute: '15'
        hour: '0'
        job: /usr/local/bin/google-archive-data -D
      when: aws_region == aws_primary_region

    - name: Schedule hourly runs of google-archive-data
      cron:
        name: Google Hourly Archive
        user: collaborate
        minute: '10'
        job: /usr/local/bin/google-archive-data -H
      when: aws_region == aws_primary_region

    - name: Schedule daily runs of Meet Metrics Gatherer
      cron:
        name: Google Meet Exec Dashboard Metrics Gatherer
        user: root
        minute: '20'
        hour: '0'
        job: /home/rsauosci/google-env/bin/python /home/rsauosci/google-env/meet-metrics/daily-google-meet-executivedash.py
      when:
        - aws_region == aws_primary_region
        - aws_status == 'prod'
