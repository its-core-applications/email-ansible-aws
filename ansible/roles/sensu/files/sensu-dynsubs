#!/usr/local/venv/sensu/bin/python3

import hashlib
import re
import sys

import boto3
import dbus
import requests
import yaml

conf_file = '/etc/sensu/agent.yml'

# Which tags should not be made into automatic subscriptions?
reject_tags = [
    'Name',
    'CustomDNSName',
]

# Fetch the region and ID from the AWS metadata service
region = requests.get('http://169.254.169.254/latest/meta-data/placement/availability-zone').text[:-1]
iid = requests.get('http://169.254.169.254/latest/meta-data/instance-id').text

client = boto3.resource('ec2', region_name=region)
instance = client.Instance(iid)

with open(conf_file, 'r') as f:
    config = yaml.safe_load(f)

with open('/etc/sensu/labels.yml', 'r') as f:
    static_labels = yaml.safe_load(f)

config['labels'] = {
    'region': region,
}

if static_labels:
    config['labels'].update(static_labels)

config['subscriptions'] = []
stop_agent = False

for tag in instance.tags:
    if tag['Key'] == 'Status' and tag['Value'] in ['spindown', 'spundown']:
        stop_agent = True

    if tag['Key'] not in reject_tags:
        config['labels'][tag['Key']] = tag['Value']

        if tag['Value'] != 'no':
            # Mutate it like the dynamic inventory script does (more or less)
            if tag['Value'] == 'yes':
                subscription = re.sub('[^A-Za-z0-9\_]', '_', tag['Key']);
            else:
                subscription = re.sub('[^A-Za-z0-9\_]', '_', tag['Key'] + '_' + tag['Value'])

            config['subscriptions'].append(subscription)

hash1 = hashlib.sha512()
with open(conf_file, 'rb') as f:
    hash1.update(f.read())

newconf = yaml.dump(config, indent=2, default_flow_style=False)

hash2 = hashlib.sha512()
hash2.update(newconf.encode('utf-8'))

if hash1.digest() != hash2.digest():
    try:
      with open(conf_file, 'w', encoding='utf-8') as f:
        f.write(newconf)
    except IOError:
        print('Failed to write subscription file')
        sys.exit(1)

    systemd = dbus.Interface(dbus.SystemBus().get_object('org.freedesktop.systemd1', '/org/freedesktop/systemd1'), 'org.freedesktop.systemd1.Manager')
    if stop_agent:
        systemd.StopUnit('sensu-agent.service')
    else:
        systemd.TryRestartUnit('sensu-agent.service', 'fail')
