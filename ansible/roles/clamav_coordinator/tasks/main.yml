- tags:
    - clamav
  block:
    - import_role:
        name: clamav

    - import_role:
        name: s3_website
      vars:
        s3_hostname: clamav.{{ subd }}

    - name: Create signature cache directories
      file:
        dest: "{{ item }}"
        state: directory
        owner: clamupdate
        group: clamupdate
        mode: "0755"
      loop:
        - "{{ clamav_sigdir }}"
        - "{{ clamav_tmpdir }}"

    - name: Install prerequisites
      yum:
        name: "{{ item }}"
        state: latest
      loop:
        - perl-Digest-SHA
        - perl-Time-Piece
        - clamav-update

    - name: Install processing scripts
      copy:
        dest: /usr/local/sbin/{{ item }}
        src: "{{ item }}"
        owner: root
        group: root
        mode: "0755"
      loop:
        - clamav_iia_hashes
        - clamav_rfxn

    - name: Configure freshclam for official signatures
      copy:
        dest: /etc/freshclam.official.conf
        src: freshclam.conf
        owner: root
        group: root
        mode: "0644"

    - name: Sync official signatures
      command: freshclam --config-file=/etc/freshclam.official.conf
      register: result
      changed_when: result.rc == 0
      failed_when: result.rc > 1

    - name: Copy custom signatures
      copy:
        src: "{{ item.name }}"
        dest: "{{ clamav_sigdir }}/{{ item.name }}"
        mode: "0644"
      loop: "{{ clamav_custom_sigs | selectattr('url', 'equalto', 'local') }}"

    - name: rsync custom signatures
      command: rsync -t --timeout=60 {{ item.url }} {{ clamav_tmpdir }}/{{ item.name }}{{ ('process' in item) | ternary('.raw', '') }}
      loop: "{{ clamav_custom_sigs | selectattr('url', 'match', '^rsync') }}"
      register: rsync_result
      until: rsync_result.rc == 0
      changed_when: rsync_result.rc == 0
      failed_when: false

    - name: HTTP custom signatures
      get_url:
        url: "{{ item.url }}"
        dest: "{{ clamav_tmpdir }}/{{ item.name }}{{ ('process' in item) | ternary('.raw', '') }}"
        mode: "0644"
        force: yes
      loop: "{{ clamav_custom_sigs | selectattr('url', 'match', '^http') }}"
      register: http_result
      changed_when: '"OK" in http_result.msg'
      failed_when: false

    - name: Generate a list of successfully updated sigs
      set_fact:
        updated_sigs: "{{ (rsync_result.results + http_result.results) | select('changed') }}"

    - name: Post-process signatures
      shell: /usr/local/sbin/clamav_{{ item.item.process }} {{ clamav_tmpdir }}/{{ item.item.name }}.raw | sort -u >| {{ clamav_tmpdir }}/{{ item.item.name }}
      loop: "{{ updated_sigs | selectattr('item.process', 'defined') }}"
      loop_control:
        label: "{{ item.item.name }}"
      changed_when: false

    - name: Copy signatures to cache directory
      copy:
        src: "{{ clamav_tmpdir }}/{{ item.item.name }}"
        dest: "{{ clamav_sigdir }}/{{ item.item.name }}"
      loop: "{{ updated_sigs }}"
      loop_control:
        label: "{{ item.item.name }}"

    - name: Clone test messages
      git:
        repo: https://gitlab.umich.edu/its/inf/collaboration-services/umich-test-mail-data
        dest: "{{ clamav_msgdir }}"

    - name: Check for false positives
      command: clamscan --database {{ clamav_sigdir }} {{ clamav_msgdir }}/ham

    - name: Check for false negatives
      command: clamscan --database {{ clamav_sigdir }} {{ clamav_msgdir }}/nam
      failed_when: false
      register: result

    - name: Check scan results
      assert:
        that:
          - result.rc == 1
          - scanned_files != 0
          - infected_files == scanned_files
      vars:
        scanned_files: "{{ (result.stdout_lines | select('match', 'Scanned files:') | first).split(':')[1] | int }}"
        infected_files: "{{ (result.stdout_lines | select('match', 'Infected files:') | first).split(':')[1] | int }}"

    - name: Upload signature files to S3
      flowerysong.melange.s3_sync:
        direction: push
        bucket: clamav.{{ subd }}
        region: "{{ aws_region }}"
        path: "{{ clamav_sigdir }}"
        permission: public-read
        overwrite: different
        exclude:
          - "*.raw"
          - mirrors.dat
        delete: true
      register: result

    - name: Submit sensu event
      uri:
        url: http://127.0.0.1:3031/events
        method: POST
        body:
          check:
            metadata:
              name: clamav-sync
            ttl: 2700
            status: 0
            output: "{{ result is changed | ternary('signatures updated', 'signatures unchanged') }}"
            handlers:
              - default
        body_format: json
        status_code: 202
      changed_when: false

    - name: Schedule signature updates
      cron:
        name: ansible-clamav-sync
        user: "{{ ansible_user }}"
        minute: 10,25,40,55
        job: . ~/ansible-aws/env-setup.sh && ansible-playbook ~/ansible-aws/ansible/bastion.yml --tags clamav
