- tags:
    - ec2
    - eip
  delegate_to: localhost
  become: false
  block:
    - name: Fetch existing {{ eip_class }} EIPs
      ec2_eip_info:
        region: "{{ aws_region }}"
        profile: "{{ aws_profile }}"
        filters:
          "tag:Class": "{{ eip_class }}"
      register: result

    - name: Create new EIPs for {{ eip_class }}
      ec2_eip:
        region: "{{ aws_region }}"
        profile: "{{ aws_profile }}"
        state: present
      loop: "{{ range(aws_region_layout[aws_status][aws_region][eip_class].count | default(1) - (result.addresses | length)) | list }}"
      register: result

    - name: Tag new EIPs
      ec2_tag:
        region: "{{ aws_region }}"
        profile: "{{ aws_profile }}"
        resource: "{{ item.allocation_id }}"
        tags:
          Class: "{{ eip_class }}"
          Name: "{{ eip_class }}"
      loop: "{{ result.results }}"

    - name: Re-fetch {{ eip_class }} EIPs
      ec2_eip_info:
        region: "{{ aws_region }}"
        profile: "{{ aws_profile }}"
        filters:
          "tag:Class": "{{ eip_class }}"
      register: result

    - name: Set {{ eip_host }}
      route53:
        profile: "{{ aws_profile_subd }}"
        command: create
        overwrite: true
        zone: "{{ subd }}"
        record: "{{ eip_host }}"
        type: A
        ttl: 60
        value: "{{ result.addresses | map(attribute='public_ip') | list }}"
