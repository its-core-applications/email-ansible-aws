- tags:
    - ec2
    - nlb
  become: false
  block:
    - ansible.builtin.include_role:
        name: ec2_targetgroup
      vars:
        tg_name: "{{ nlb_name }}-{{ tg_port }}"
      loop: "{{ nlb_ports }}"
      loop_control:
        loop_var: tg_port

    - name: Create {{ nlb_name }} loadbalancer
      elb_network_lb:
        name: "{{ aws_resource_prefix }}-lb-{{ nlb_name }}"
        region: "{{ aws_region }}"
        profile: "{{ aws_profile }}"
        tags:
          BusinessOwner: "{{ aws_resource_owner }}"
        state: present
        scheme: "{{ nlb_scheme }}"
        cross_zone_load_balancing: true
        subnets: "{{ nlb_subnets }}"
        listeners: "[ {% for port in nlb_ports %}{'Port': {{ port }}, 'Protocol': 'TCP', 'DefaultActions': [{'Type': 'forward', 'TargetGroupName': '{{ aws_resource_prefix }}-tg-{{ nlb_name }}-{{ port }}'}]},{% endfor %} ]"
      register: result

    - name: Set pretty DNS name for {{ nlb_name }} loadbalancer
      route53:
        profile: "{{ aws_profile_subd }}"
        command: create
        overwrite: true
        zone: "{{ subd }}"
        record: "{{ nlb_dns_name }}"
        type: A
        alias: true
        alias_hosted_zone_id: "{{ result.canonical_hosted_zone_id }}"
        value: "{{ result.dns_name }}"
