---

- hosts: localhost
  become: false
  tasks:
    - import_tasks: task_find_ami.yml

    - name: Gather VPC subnet facts
      ec2_vpc_subnet_facts:
        region: "{{ aws_region }}"
        filters:
          vpc-id: "{{ aws_vpn_vpc }}"
      register: ec2_subnets

    - name: Create relay hosts
      ec2:
        group: [ vpn-default, relay ]
        key_name: "{{ aws_ssh_key }}"
        instance_type: m5.large
        region: "{{ aws_region }}"
        vpc_subnet_id: "{{ item.id }}"
        image: "{{ find_ami.image_id }}"
        instance_profile_name: standard
        instance_tags:
          Class: relay
          Status: preproduction
        count: 1
      when: groups.tag_Class_relay | default([]) | intersect(groups[item.availability_zone] | default([])) | length == 0
      loop: "{{ ec2_subnets.subnets }}"
      register: ec2

    - import_tasks: task_wait_for_launched.yml

- import_playbook: relay.yml

- hosts: localhost
  become: false
  tasks:
    - name: "Create relay-{{ aws_region }} ELB"
      ec2_elb_lb:
        name: "relay-{{ aws_region }}"
        region: "{{ aws_region }}"
        state: present
        scheme: internal
        idle_timeout: 3600
        cross_az_load_balancing: true
        security_group_names: relay-elb
        subnets: "{{ ec2_subnets.subnets | map(attribute='id') | list }}"
        listeners:
          - protocol: tcp
            load_balancer_port: 25
            instance_port: 25
            proxy_protocol: true
        health_check:
          ping_protocol: tcp
          ping_port: 25
          response_timeout: 10
          interval: 30
          unhealthy_threshold: 2
          healthy_threshold: 5
      register: result

    - name: "Set relay-{{ aws_region }}.{{ subd }}"
      route53:
        command: "create"
        overwrite: true
        zone: "{{ subd }}"
        record: "relay-{{ aws_region }}.{{ subd }}"
        type: "A"
        alias: true
        alias_hosted_zone_id: "{{ result.elb.hosted_zone_id }}"
        value: "{{ result.elb.dns_name }}"

    - name: "Add instances to relay-{{ aws_region }}"
      ec2_elb:
        ec2_elbs: "relay-{{ aws_region }}"
        region: "{{ aws_region }}"
        instance_id: "{{ item }}"
        state: present
        wait: false
      loop: "{{ groups.tag_Class_relay | default([]) | map('extract', hostvars, 'ec2_id') | list }}"
