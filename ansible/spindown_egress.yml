---

- hosts: Class_egress:&Status_production
  serial: 1
  gather_facts: false
  tasks:
    - name: Set status on oldest host to spindown
      ec2_tag:
        region: "{{ aws_region }}"
        resource: "{{ instance_id }}"
        tags:
          Status: spindown
      when:
        - launch_time == groups.Class_egress | map('extract', hostvars, 'launch_time') | sort | first
        - groups.Class_egress | intersect(groups.Status_spindown | default([])) | length == 0
      register: result

    - meta: refresh_inventory
      when: result is changed

- hosts: localhost
  become: false
  tasks:
    - import_tasks: task_dns_egress.yml

- hosts: Class_egress:&Status_spindown
  tasks:
    - name: Stop sensu
      systemd:
        name: sensu-client
        state: stopped
      ignore_errors: true

    - name: Wait for active connections to finish
      wait_for:
        host: 0.0.0.0
        port: 25
        state: drained

    - import_tasks: task_spindown_redis.yml

    - name: Give the queue a chance to quiesce
      pause: seconds=60

    - import_tasks: task_spindown_simta.yml

    - name: Set status to spundown
      ec2_tag:
        region: "{{ aws_region }}"
        resource: "{{ instance_id }}"
        tags:
          Status: spundown

