- hosts: localhost
  become: false
  tasks:
    - ansible.builtin.import_role:
        name: ec2_launch
      vars:
        launch_class: authz-static
        launch_ami_class: authz-relay
        launch_subnet: "{{ ec2_subnets_public_sorted[aws_profile].2 }}"
        launch_groups:
          - smtp

- hosts: Class_authz_static:&Status_spinup
  tasks:
    - ansible.builtin.meta: end_host
      when: region != aws_region
      tags: always

    - ansible.builtin.import_role:
        name: tcpd_update

    - name: Sync filter data
      ansible.builtin.import_role:
        name: simta
        tasks_from: sync.yml

    - name: Set status to production
      delegate_to: localhost
      become: false
      ec2_tag:
        region: "{{ region }}"
        profile: "{{ aws_profile_ec2 }}"
        resource: "{{ instance_id }}"
        tags:
          Status: production

    - ansible.builtin.import_role:
        name: monitoring_spinup

- hosts: localhost
  become: false
  tasks:
    - ansible.builtin.import_role:
        name: ec2_find_subnets
      tags:
        - eni

    - ansible.builtin.import_role:
        name: ec2_eni
      vars:
        eni_name: authz-static
        eni_security_groups:
          - smtp
        eni_subnet: "{{ ec2_subnets_vpn_sorted[aws_profile].2 }}"
        eni_ip_index: 5
