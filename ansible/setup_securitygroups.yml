---

- hosts: localhost
  become: false
  tasks:
    - import_role:
        name: ec2_find_subnets

    - name: Create default security group
      ec2_group:
        region: "{{ aws_region }}"
        profile: "{{ aws_profile[aws_status][aws_region] }}"
        vpc_id: "{{ ec2_subnets_public.0.vpc_id }}"
        name: public-default
        description: default VPC security group
        rules:
          - proto: icmp
            ports: -1
            cidr_ip: 0.0.0.0/0
          - proto: tcp
            ports:
              - 22
              - 80
              - 443
            cidr_ip: 0.0.0.0/0
          - proto: udp
            ports: 60000-61000
            cidr_ip: 0.0.0.0/0
        rules_egress:
          - proto: all
            cidr_ip: 0.0.0.0/0

    - name: Create VPN default security group
      ec2_group:
        region: "{{ aws_region }}"
        profile: "{{ aws_profile[aws_status][aws_region] }}"
        vpc_id: "{{ ec2_subnets_vpn.0.vpc_id }}"
        name: vpn-default
        description: default VPC security group
        rules:
          - proto: icmp
            ports: -1
            cidr_ip: 0.0.0.0/0
          - proto: tcp
            ports: 22
            cidr_ip: 0.0.0.0/0
          - proto: udp
            ports: 60000-61000
            cidr_ip: 0.0.0.0/0
        rules_egress:
          - proto: all
            cidr_ip: 0.0.0.0/0

    - name: Create security group for mx ELB
      ec2_group:
        region: "{{ aws_region }}"
        profile: "{{ aws_profile[aws_status][aws_region] }}"
        vpc_id: "{{ ec2_subnets_public.0.vpc_id }}"
        name: mx-elb
        description: mx ELB
        rules:
          - proto: tcp
            ports: 25
            cidr_ip: 0.0.0.0/0
          - proto: icmp
            ports: -1
            cidr_ip: 0.0.0.0/0
        rules_egress:
          - proto: all
            cidr_ip: 0.0.0.0/0

    - name: Create security group for mx
      ec2_group:
        region: "{{ aws_region }}"
        profile: "{{ aws_profile[aws_status][aws_region] }}"
        vpc_id: "{{ ec2_subnets_public.0.vpc_id }}"
        name: mx
        description: mx hosts
        rules:
          - proto: tcp
            ports: 25
            group_name: mx-elb

    - name: Create security group for egress
      ec2_group:
        region: "{{ aws_region }}"
        profile: "{{ aws_profile[aws_status][aws_region] }}"
        vpc_id: "{{ ec2_subnets_public.0.vpc_id }}"
        name: egress
        description: egress hosts
        rules:
          - proto: tcp
            ports: 25
            cidr_ip: "{{ (ec2_subnets_public + ec2_subnets_vpn) | map(attribute='cidr_block') | cidr_merge }}"

    - name: Create security group for relay
      ec2_group:
        region: "{{ aws_region }}"
        profile: "{{ aws_profile[aws_status][aws_region] }}"
        vpc_id: "{{ ec2_subnets_vpn.0.vpc_id }}"
        name: relay
        description: relay hosts
        rules:
          - proto: tcp
            ports:
              - 25
              - 587
            cidr_ip: 0.0.0.0/0
          - proto: icmp
            ports: -1
            cidr_ip: 0.0.0.0/0
        rules_egress:
          - proto: all
            cidr_ip: 0.0.0.0/0

    - name: Create security group for smtp ELB
      ec2_group:
        region: "{{ aws_region }}"
        profile: "{{ aws_profile[aws_status][aws_region] }}"
        vpc_id: "{{ ec2_subnets_public.0.vpc_id }}"
        name: smtp-elb
        description: auth SMTP ELB
        rules:
          - proto: tcp
            ports:
              - 25
              - 465
              - 587
            cidr_ip: 0.0.0.0/0
          - proto: icmp
            ports: -1
            cidr_ip: 0.0.0.0/0
        rules_egress:
          - proto: all
            cidr_ip: 0.0.0.0/0

    - name: Create security group for smtp
      ec2_group:
        region: "{{ aws_region }}"
        profile: "{{ aws_profile[aws_status][aws_region] }}"
        vpc_id: "{{ ec2_subnets_public.0.vpc_id }}"
        name: smtp
        description: auth SMTP hosts
        rules:
          - proto: tcp
            ports:
              - 25
              - 465
              - 587
            group_name: smtp-elb

    - name: Create security group for rsyslog
      ec2_group:
        region: "{{ aws_region }}"
        profile: "{{ aws_profile[aws_status][aws_region] }}"
        vpc_id: "{{ ec2_subnets_vpn.0.vpc_id }}"
        name: rsyslog
        description: rsyslog hosts
        rules:
          - proto: tcp
            ports:
              - 2003 # carbon-aggregator
              - 2514 # Remote syslog using RELP
              - 3000 # uchiwa
              - 4567 # sensu API
              - 5672 # RabbitMQ for sensu pub/sub
              - 8888 # graphite-api
            cidr_ip: "{{ (ec2_subnets_public + ec2_subnets_vpn) | map(attribute='cidr_block') | cidr_merge }}"

    - name: Create security group for rbldnsd
      ec2_group:
        region: "{{ aws_region }}"
        profile: "{{ aws_profile[aws_status][aws_region] }}"
        vpc_id: "{{ ec2_subnets_public.0.vpc_id }}"
        name: rbldnsd
        description: rbldnsd hosts
        rules:
          - proto: udp
            ports: 53
            cidr_ip: "{{ (ec2_subnets_public + ec2_subnets_vpn) | map(attribute='cidr_block') | cidr_merge }}"

    - name: Create security group for redis
      ec2_group:
        region: "{{ aws_region }}"
        profile: "{{ aws_profile[aws_status][aws_region] }}"
        vpc_id: "{{ ec2_subnets_public.0.vpc_id }}"
        name: redis
        description: redis hosts
        rules:
          - proto: tcp
            ports:
              - 6379
              - 16379
            cidr_ip: "{{ (ec2_subnets_public + ec2_subnets_vpn) | map(attribute='cidr_block') | cidr_merge }}"
