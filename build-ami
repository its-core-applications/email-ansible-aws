#!/bin/bash

# packer needs to be run with a specific working directory
cd $(readlink -fn $(dirname "$BASH_SOURCE"))

if [[ $1 ]]; then
    class=${1//-/_}
else
    class=base
fi

if [[ ! -f ansible/${class}.yml ]]; then
    echo "ansible/${class}.yml doesn't exist, aborting"
    exit 1
fi

if [[ $class = 'vdc_relay' ]]; then
    export AWS_DEFAULT_PROFILE=$(env -u ANSIBLE_CALLBACK_PLUGINS ANSIBLE_STDOUT_CALLBACK=json ansible --playbook-dir ansible localhost -m debug -a 'msg={{ (aws_layout[aws_status] | dict2items | selectattr("value.classes", "contains", "vdc-relay")).0.key }}' | jq -r .plays[0].tasks[0].hosts.localhost.msg)
fi

export AWS_DEFAULT_REGION=$(env -u ANSIBLE_CALLBACK_PLUGINS ANSIBLE_STDOUT_CALLBACK=json ansible --playbook-dir ansible localhost -m debug -a 'msg={{ aws_layout[aws_status][aws_profile].region }}' | jq -r .plays[0].tasks[0].hosts.localhost.msg)

os=rhel9

echo "Building $class image for $os in $AWS_STATUS $AWS_DEFAULT_REGION"

owner='309956199498'
filter='Name=name,Values=RHEL-9.2.*_HVM-202*-x86_64*Access*'
root='/dev/sda1'

if [[ $class = 'base' ]] || [[ $class = 'vdc_relay' ]]; then
    base=$(aws ec2 describe-images --filters "Name=owner-id,Values=$owner" 'Name=state,Values=available' "$filter")
else
    base=$(aws ec2 describe-images --owners self --filters 'Name=state,Values=available' 'Name=tag:image_type,Values=base' "Name=tag:os,Values=$os")
fi

base=$(echo "$base" | jq -r '.Images | sort_by(.CreationDate) | last(.[]).ImageId')

subnet_id=$(aws ec2 describe-subnets --filters 'Name=tag:Class,Values=vpn' | jq -r '.Subnets[].SubnetId' | tail -n 1)

export VAULT_TOKEN=$(vault login -token-only -method=aws)
packer init -upgrade packer/template.pkr.hcl
packer build -var "aws_region=$AWS_DEFAULT_REGION" -var "image_os=$os" -var "image_type=$class" -var "base_ami=$base" -var "root_device=$root" -var "subnet_id=$subnet_id" packer/template.pkr.hcl
