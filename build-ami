#!/bin/bash

if [[ $1 ]]; then
    class=$1
else
    class=base
fi

if [[ $2 ]]; then
    os=$2
else
    os=centos7
fi

if [[ $class = 'base' ]]; then
    if [[ $os = 'centos7' ]]; then
        owner='679593333241'
        filter='Name=product-code,Values=aw0evgkw8e5c1q413zgy5pjce'
    elif [[ $os = 'rhel7' ]]; then
        owner='309956199498'
        filter='Name=name,Values=RHEL-7.?_HVM_GA*'
    else
        owner='137112412989'
        filter='Name=name,Values=amzn2-ami-hvm-*'
    fi
    base=$(aws ec2 describe-images --filters "Name=owner-id,Values=$owner" 'Name=state,Values=available' "$filter")
else
    base=$(aws ec2 describe-images --owners self --filters "Name=tag:image_type,Values=base" "Name=tag:os,Values=$os")
fi

base=$(echo "$base" | jq -r '.Images | sort_by(.CreationDate) | last(.[]).ImageId')

python -c '
import sys, json, yaml
with open(sys.argv[1]) as f:
   print json.dumps(yaml.load(f), indent=2)
' packer/template.yml >| packer/template.json

# Quick and dirty elision of unnecessary encryption step
if [[ $class != 'base' ]]; then
    jq 'del(.builders[0].encrypt_boot)' <packer/template.json >packer/munged
    mv -f packer/munged packer/template.json
fi

packer build -var "image_os=$os" -var "image_type=$class" -var "base_ami=$base" packer/template.json
